---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  labels:
    app.kubernetes.io/name: backend
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/component: api
    app.kubernetes.io/part-of: yolo
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: backend
      app.kubernetes.io/version: "0.0.1"
      app.kubernetes.io/component: api
      app.kubernetes.io/part-of: yolo
  template:
    metadata:
      labels:
        app.kubernetes.io/name: backend
        app.kubernetes.io/version: "0.0.1"
        app.kubernetes.io/component: api
        app.kubernetes.io/part-of: yolo
    spec:
      containers:
      - name: backend
        image: timaali/backend:latest
        envFrom:
          - secretRef:
              name: backend-secrets
        ports:
          - name: http
            containerPort: 80



---
apiVersion: v1
kind: Service
metadata:
  name: backend
  labels:
    app.kubernetes.io/name: backend
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/component: api
    app.kubernetes.io/part-of: yolo

spec:
  type: ClusterIP
  clusterIP: None
  selector:
    app.kubernetes.io/name: backend
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/component: api
    app.kubernetes.io/part-of: yolo

  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 80

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: yolo
  name: backend
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
spec:
  ingressClassName: alb
  rules:
    - http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: backend
              port:
                number: 80
